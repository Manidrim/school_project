name: CI

on:
  push:
    branches:
      - main
  pull_request: ~
  workflow_dispatch: ~

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build Docker images
        uses: docker/bake-action@v6
        with:
          pull: true
          load: true
          files: |
            compose.yaml
            compose.override.yaml
          set: |
            *.cache-from=type=gha,scope=${{github.ref}}
            *.cache-from=type=gha,scope=refs/heads/main
            *.cache-to=type=gha,scope=${{github.ref}},mode=max
      -
        name: Start services
        run: docker compose up --wait --no-build
      -
        name: Services diagnostic
        run: |
          echo "=== Docker Compose Services Status ==="
          docker compose ps
          echo "=== Docker Compose Logs ==="
          docker compose logs --tail=50
          echo "=== Network connectivity test ==="
          docker compose exec -T php curl -f http://localhost:2019/metrics || echo "Caddy metrics not available"
          docker compose exec -T pwa wget -qO- http://localhost:3000 > /dev/null && echo "PWA responding" || echo "PWA not responding"
      -
        name: Wait for services to be fully ready
        run: |
          echo "Waiting additional time for services to stabilize..."
          sleep 10
      -
        name: Check HTTP reachability
        run: |
          for i in {1..5}; do
            if curl -v --fail-with-body http://localhost; then
              echo "HTTP check successful"
              break
            elif [ $i -eq 5 ]; then
              echo "HTTP check failed after 5 attempts"
              exit 1
            else
              echo "HTTP check attempt $i failed, retrying in 10 seconds..."
              sleep 10
            fi
          done
      -
        name: Check API reachability
        run: |
          for i in {1..5}; do
            if curl -vk --fail-with-body https://localhost; then
              echo "API check successful"
              break
            elif [ $i -eq 5 ]; then
              echo "API check failed after 5 attempts"
              exit 1
            else
              echo "API check attempt $i failed, retrying in 10 seconds..."
              sleep 10
            fi
          done
      -
        name: Check PWA reachability
        run: |
          for i in {1..5}; do
            if curl -vk --fail-with-body -H 'Accept: text/html' https://localhost; then
              echo "PWA check successful"
              break
            elif [ $i -eq 5 ]; then
              echo "PWA check failed after 5 attempts"
              exit 1
            else
              echo "PWA check attempt $i failed, retrying in 10 seconds..."
              sleep 10
            fi
          done
      -
        name: Create test database
        run: docker compose exec -T php bin/console -e test doctrine:database:create
      -
        name: Run migrations
        run: docker compose exec -T php bin/console -e test doctrine:migrations:migrate --no-interaction
      -
        name: Run PHPUnit
        run: docker compose exec -T php bin/phpunit
      -
        name: Doctrine Schema Validator
        run: docker compose exec -T php bin/console -e test doctrine:schema:validate
  lint:
    name: Docker Lint
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Lint Dockerfiles
        uses: hadolint/hadolint-action@v3.1.0
        with:
          recursive: true
